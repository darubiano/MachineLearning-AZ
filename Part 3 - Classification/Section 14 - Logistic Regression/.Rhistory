combn(7,5)
combn(3,2)
setwd("C:/Users/darub/Desktop/R Studio")
setwd("C:/Users/darub/Desktop/Machine Learning/machinelearning-az-master/datasets/Part 3 - Classification/Section 14 - Logistic Regression")
dataset = read.csv('Social_Network_Ads.csv')
View(dataset)
dataset = dataset[, 3:5]
View(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
View(training_set)
View(testing_set)
# Escalado de valores
training_set[,1:2] = scale(training_set[,1:2])
testing_set[,1:2] = scale(testing_set[,1:2])
View(testing_set)
testing_set[,-3]
View(testing_set)
prob_pred = predict(classifier, type = "response",
newdata = testing_set[,-3])
classifier = glm(formula = Purchased ~ .,
data = training_set,
family = binomial)
# Prediccion de los resultados con el conjunto de testing
prob_pred = predict(classifier, type = "response",
newdata = testing_set[,-3])
prob_pred
#Regresion logistica
# Importar el dataset
dataset = read.csv('Social_Network_Ads.csv')
dataset = dataset[, 3:5]
# Dividir los datos en conjunto de entrenamiento y conjunto de test
# install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
# Escalado de valores
training_set[,1:2] = scale(training_set[,1:2])
testing_set[,1:2] = scale(testing_set[,1:2])
# Ajustar el modelo de regresion logistica con el conjunto de entrenamiento.
#glm modelos genericos
classifier = glm(formula = Purchased ~ .,
data = training_set,
family = binomial)
# Prediccion de los resultados con el conjunto de testing
prob_pred = predict(classifier, type = "response",
newdata = testing_set[,-3])
prob_pred
y_pred = ifelse(prob_pred>0.5,1,0)
y_pred
cm = table(testing_set[, 3], y_pred)
cm
